* Linux My Personal Notes and Thoughts                                  :TOC_9:
  - [[#linux-notes--thoughts][Linux Notes / Thoughts]]
    - [[#fedora-silverblue-and-bluefin-customized-version-of-fedora-silverblue][Fedora Silverblue and bluefin customized version of Fedora Silverblue]]
    - [[#doom-emacs][doom emacs]]
    - [[#cheat-sheet-links][Cheat Sheet Links]]
    - [[#manjaro-linux-plasma-kde][Manjaro Linux Plasma KDE]]
    - [[#opensuse-linux-leap-155-x86_64-plasma-kde][openSUSE Linux Leap 15.5 x86_64 Plasma KDE]]
    - [[#random-linux-commands-flag-notes][Random Linux Commands Flag Notes]]
    - [[#random-linux-commands][Random Linux Commands]]
      - [[#trash-cli-commands][Trash-cli commands]]
      - [[#other-random-opensuse-links][Other Random openSUSE Links]]
    - [[#linux-distributions][Linux Distributions]]
    - [[#apps][Apps]]
    - [[#configurations-and-tweaks][Configurations and Tweaks]]
      - [[#alacritty][Alacritty]]
        - [[#main-configuration-from-here][Main Configuration From Here]]
        - [[#other-interesting-configurations][Other Interesting Configurations]]
  - [[#text-editing-resources][Text Editing Resources]]
    - [[#introduction-text][Introduction Text]]
      - [[#links][Links]]
    - [[#learning-the-vim-keybindings---video-game-for-vim-keybindings][Learning The Vim Keybindings - Video Game For Vim Keybindings]]
      - [[#videos-from-vomikod][Videos From Vomikod]]
      - [[#file-formats-for-note-taking][File Formats For Note Taking]]
        - [[#short-videos-note-taking][Short Videos Note Taking]]
          - [[#is-neovim-the-ultimate-note-taking-tool][Is Neovim The Ultimate Note Taking Tool?]]
        - [[#long-videos-note-taking][Long Videos Note Taking]]
          - [[#videos-of-interest][Videos Of Interest]]
    - [[#neovim-distributions][Neovim Distributions]]
    - [[#rss-feeds][RSS Feeds]]
    - [[#the-primeagen-related-links---michael-paulson][The Primeagen Related Links - Michael Paulson]]
    - [[#emacs-m-x-commands-i-randomly-use][Emacs M-x Commands I randomly use]]
    - [[#greader-notes][Greader Notes]]
      - [[#my-greader-workflow-in-detail][My Greader Workflow In Detail]]
  - [[#newsboat-configuration-and-my-youtube-playlist-watch-list][Newsboat Configuration and My Youtube Playlist Watch list]]
    - [[#config-file][config file]]
    - [[#main-color-theme-dark-file][main color theme dark file]]
    - [[#alternative-color-theme-latte-catppuccin-for-newsboat][alternative color theme latte (Catppuccin for Newsboat)]]
    - [[#urls][urls]]
  - [[#faqs][FAQs]]
    - [[#which-text-editor-do-you-recommend-the-most][Which text editor do you recommend the most?]]
    - [[#which-text-format-do-you-recommend-the-most][Which text format do you recommend the most?]]
    - [[#which-system-do-you-recommend-learning-for-emacs-keybindings-between-evil-vanilla-emacs-xah-fly-keys-boon-meow-wakib][Which system do you recommend learning for emacs keybindings between evil, vanilla emacs, xah fly keys, boon, meow, wakib?]]
  - [[#additional-links][Additional Links]]
  - [[#contact-me][Contact Me]]

** Linux Notes / Thoughts
*** Fedora Silverblue and bluefin customized version of Fedora Silverblue
[[https://universal-blue.discourse.group/docs?topic=41][Introduction to Bluefin]]
[[https://universal-blue.discourse.group/docs][Welcome to Universal Blue General Documentation]]
[[https://projectbluefin.io/][Project Bluefin home]]
[[https://universal-blue.discourse.group/t/gui-install-which-order/2018/9][GUI install, which order?]]
[[https://docs.fedoraproject.org/en-US/quick-docs/fonts/][Adding New Fonts in Fedora]]
[[https://docs.fedoraproject.org/en-US/quick-docs/][Fedora Quick Docs]]
[[https://docs.fedoraproject.org/en-US/docs/][User Documentation - Fedora Linux]]
[[https://docs.fedoraproject.org/en-US/fedora/latest/][Fedora Linux User Documentation]]
[[https://docs.fedoraproject.org/en-US/fedora-silverblue/][Fedora Silverblue User Guide]]
#+begin_src bash
  distrobox create --init --image quay.io/fedora/fedora:39 --name fedora_box_39 --pre-init-hooks "dnf install -y systemd"
  Notes from above link:
  GUI Apps: Flatpak, AppImage, BoxBuddy/Distrobox, Native layering (try not to use layering)
  homebrew is for CLI apps. Some of the things I use are neovim, dysk, gh, glances, grype, helix, micro, ollama, spf, ranger, ripgrep, and yt-dlp.
  boxbuddy and distrobox are for when you need a traditional distro to do something. Like say there’s an app that only comes as a .deb or something and you’re stuck with or you’re helping a friend with something and need a disposable pet container.
  ubuntu-family-fonts - these are preinstalled do not need to install them rpm-ostree
  flatpak install
  flatpak remotes
  99% fedora
  rpm-ostree install htop (do not install software this way)
  systemctl reboot
  rpm-ostree status
  rpm-ostree upgrade
  software center can install flatpaks
  flatpak update
  for cli tools - toolbox create techhut (for silverblue not bluefin, use homebrew on blue)
      toolbox enter techhut
      toolbox list
      toolbox run app name - for a quick launch option
      sudo dnf update
      dnf command to install cli tools like normal
      sudo rpm-ostree status
      flatpak list
      sudo rpm-ostree update
      sudo ostree admin status
      dnf install python-pip
      rpm -qa | grep -i 'pip'
      dnf search fonts
      sudo dnf install libreoffice-opensymbol-fonts
      sudo mkdir /usr/share/fonts/googlefonts && cd /usr/share/fonts/googlefonts
      sudo unzip -d . ~/Downloads/FontArchive.zip
      sudo fc-cache -fv
      fc-match Font Name
      distrobox enter fedora_box_39
      sudo systemctl status
      dnf group list -v --available | grep desktop
      sudo dnf install @xfce-desktop-environment
      sudo dnf install @kde-desktop-environment
      sudo dnf install -y htop
      sudo dnf install -y tldr
      sudo dnf install -y tmux
      sudo dnf install -y tree
      sudo dnf install -y bat
      sudo dnf install -y eza
      sudo dnf install -y dua-cli
      sudo dnf install -y which
      sudo dnf install -y feh
      https://distrobox.it/useful_tips/
      From above link:
      Resolve “Error cannot open display: :0”
      If your container is not able to connect to your host xserver, make sure to install xhost on the host machine and run xhost +si:localuser:$USER. If you wish to enable this functionality on future reboots add the above command to your ~/.distroboxrc
      -$ cat ~/.distroboxrc
      xhost +si:localuser:$USER >/dev/null
      brew install newsboat
      brew install git
      brew install gh
      brew install notmuch
      brew install isync
      To start isync now and restart at login:
      brew services start isync
      Or, if you don't want/need a background service you can just run:
      /home/linuxbrew/.linuxbrew/opt/isync/bin/mbsync -a
    brew install detox
    brew install espeak-ng
    brew install aspell
    brew install hyfetch
    hyfetch
    sudo dnf install emacs
    sudo dnf update
    sudo dnf install python3
    brew install aspell
    sudo dnf install aspell
    sudo dnf install aspell-en
    aspell dicts - lists dictionaries installed - en_US worked in emacs
    sudo dnf install ./google-chrome-stable_current_x86_64.rpm
    sudo dnf install ./microsoft-edge-stable-125.0.2535.79-1.x86_64.rpm
    sudo dnf install xorg-x11-server-Xwayland - I am not sure if I needed this or not, it was more a troubleshooting step that was probably not needed
    sudo dnf install ./VMware-Horizon-Client-2312.1-8.12.1-23543969.x64.rpm
    sudo dnf install python3-qt5
    sudo dnf install lazygit
    sudo dnf install 'dnf-command(config-manager)'
    sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
    sudo dnf install gh --repo gh-cli
    gh auth login
    git config --global user.name "David R Rrrrr"
    git config --global user.email "david.rrrrrr@yandex.com"
    gh auth status
    gh auth setup-git
    gh auth
    unset SSH_ASKPASS
    nano ~/.gitconfig
    sudo dnf install espeak-ng
    cd /usr/bin/
    sudo ln -s /usr/bin/espeak-ng espeak
    ============================================================
    python3.12 -m pip install exifread
    error: externally-managed-environment
    × This environment is externally managed
    ╰─> To install Python packages system-wide, try brew install
	xyz, where xyz is the package you are trying to
	install.

	If you wish to install a Python library that isn't in Homebrew,
      use a virtual environment:

      python3 -m venv path/to/venv
      source path/to/venv/bin/activate
      python3 -m pip install xyz

      If you wish to install a Python application that isn't in Homebrew,
	it may be easiest to use 'pipx install xyz', which will manage a
	virtual environment for you. You can install pipx with

	brew install pipx

	You may restore the old behavior of pip by passing
	the '--break-system-packages' flag to pip, or by adding
	'break-system-packages = true' to your pip.conf file. The latter
	will permanently disable this error.

	If you disable this error, we STRONGLY recommend that you additionally
	pass the '--user' flag to pip, or set 'user = true' in your pip.conf
	file. Failure to do this can result in a broken Homebrew installation.

	Read more about this behavior here: <https://peps.python.org/pep-0668/>
#+end_src
*** doom emacs
- before you start install these items
- git
- ripgrep
- Manjaro
- sudo pacman -S ripgrep
- should already be included in openSUSE or
- sudo zypper install ripgrep
- fd
- Manjaro
- pacman -S fd
- openSUSE
- because fd is out of date in the openSUSE Leap I am installing with cargo which is part of rust instead
- https://www.rust-lang.org/tools/install
- https://doc.rust-lang.org/book/ch01-01-installation.html
- https://learning-rust.github.io/docs/installation/
- https://en.opensuse.org/Rust - better to not use this and instead use the above, but it is another option
- cargo install fd-find
- snap install emacs --classic
- Manjaro
- # required dependencies
- pacman -S git emacs ripgrep
- # optional dependencies
- pacman -S fd
- openSUSE
- zypper addrepo https://download.opensuse.org/repositories/editors/openSUSE_Leap_15.1/editors.repo
- zypper refresh
- zypper install emacs
- git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
- ~/.emacs.d/bin/doom install
- cd ~/.local/share/fonts/
- https://www.nerdfonts.com/font-downloads
- save UbuntuMono Nerd Font files to the above folder
- https://design.ubuntu.com/font
- save Ubuntu font files to the above folder
- sudo fc-cache -fv
- fc-list | grep -i 'ubuntu'
- M-x all-the-icons-install-fonts
*** Cheat Sheet Links
- https://wiki.manjaro.org/index.php/CheatSheet
- https://wiki.manjaro.org/index.php/Main_Page
- https://docs.manjaro.org/
- https://forum.manjaro.org/
- https://en.opensuse.org/SDB:Zypper_usage
- https://doc.opensuse.org/documentation/leap/reference/single-html/book-reference/index.html#sec-zypper
- https://doc.opensuse.org/
*** Manjaro Linux Plasma KDE
- open graphical pamac
  - official repositories
    - refresh mirrors list (or sudo pacman-mirrors --fasttrack)
- hamburger menu
  - preferences
    - enable aur support
- terminal
  - sudo pacman -Syyu
- open graphical pamac
  - ttf-ms-fonts (or yay -S ttf-ms-fonts or ttf-ms-win10-auto)
- terminal
  - sudo pacman -S base-devel
  - sudo pacman -S yay
  - lsb_release -drc
  - yay -S vmware-horizon-client
  - sudo pacman -S espeak-ng
  - sudo pacman -S espeak-ng-compat
  - sudo pacman -S texlive-core texlive-bin texlive-latexextra
    - this is for exporting to pdf from org mode emacs command pdflatex
    - alternative for larger install: sudo pacman -S texlive-most texlive-lang
      - note this is a large install
    - to find additional packages: pacman -Ss texlive
  - sudo pacman -S isync notmuch #mbsync
*** openSUSE Linux Leap 15.5 x86_64 Plasma KDE
- [[https://www.opensuse.org/#Leap][openSUSE Leap]]
- [[https://snapcraft.io/install/snap-store/opensuse][Install Snap on openSUSE]]
- [[https://flatpak.org/setup/openSUSE][Install Flatpak on openSUSE]]
- [[https://opensuse-guide.org/help.php][Unofficial guide - Appendix A: Help and Docs]]
- [[https://opensuse-guide.org/contribute.php][Unofficial guide - Appendix E: Getting Involved]]
- [[https://build.opensuse.org/][Build openSUSE.org]]
*** Random Linux Commands Flag Notes
grep [options] [pattern] [file or folder or .]
- I ignore binary files from search
- L files-without-match - just list filenames that do not contain matches
- i ignore-case
- l files-with-matches - just list filenames that contain matches
- r recursive
- v instead of returning matches return everything that does NOT match (invert-match)
detox
- detox -n or --dry-run to see what is going to do before running a command
- detox -rvn path/ then once you are sure changes are ok detox -rv path/
- n --dry-run does not change anything
- r recursive into subfolders (any folders starting with . such as .git and .cache are skipped by default)
- v be verbose about files being renamed
rsync
- a - archive mode - quick way to tell it you want recursion and preserve almost everything about the file properties permissions
- v - verbose
- h - output numbers in a human-readable format
- --delete (automatically calls --delete-during) - tells rsync to delete extraneous files - read the manual (man) page for this option as their are some complex nuances to it for difference scenarios, but for my backup to external hard drive use this is a good option
- --exclude - exclude something from being synced
*** Random Linux Commands
Here are a bunch of commands I have run recently just for future reference. I
may or may not have continued using some of these, but you have to sometimes
play around and try different options to find out what is helpful. Some of this
is general command line and some is openSUSE or Manjaro specific.
#+begin_src sh
  cat /etc/os-release
  sudo zypper refresh
  # if you are running tumbleweed sudo zypper dup
  # --allow-vendor-change dup stands for distribution upgrades whereas
  # zypper up is for package updates
  sudo zypper update
  # command not found - it will tell you what to install to make a
  # certain command available to you
  cnf <command>
  # compiling and linking applications needed for make, make install commands
  sudo zypper install patterns-devel-base-devel_basis # minimal set of tools for
  # install command detox for fixing filenames https://github.com/dharple/detox
  mkdir ~/build
  cd ~/build
  wget https://github.com/dharple/detox/releases/download/v2.0.0/detox-2.0.0.tar.gz
  tar xzvf detox-2.0.0.tar.gz
  cd detox-2.0.0
  ./configure
  make
  sudo make install
  # tool for hp printer
  sudo zypper install hplip
  sudo zypper install git-core
  git --version
  git config --global user.name "David R Rrrrr"
  git config --global user.email "david.rrrrrr@yandex.com"
  git config --global core.editor "vim"
  git config --global user.name
  git config --global user.email
  git config --global core.editor
  sudo zypper addrepo https://cli.github.com/packages/rpm/gh-cli.repo
  sudo zypper refresh
  sudo zypper install gh
  gh auth login
  sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
  sudo zypper addrepo https://packages.microsoft.com/yumrepos/edge microsoft-edge
  sudo zypper refresh
  sudo zypper install microsoft-edge-stable
  # alternative method for obtaining edge below
  sudo zypper install opi
  opi msedge
  # other interesting options for opi - brave, megasync, vivaldi, vscode, yandex-browser
  opi codecs
  sudo zypper install fetchmsttfonts
  sudo zypper install fira-code-fonts
  sudo zypper install the_silver_searcher
  sudo zypper install ripgrep
  # to make sure there are no emacs files that need to be deleted before I
  # install doom emacs
  find ~ -type f \( -name ".emacs" -o -name ".emacs.el" -o -name "init.el" \) -print
  sudo zypper install pandoc
  sudo zypper install notmuch
  sudo zypper install isync # mbsync
  sudo zypper install espeak-ng
  sudo zypper install espeak-ng-compat
  sudo zypper addrepo https://download.opensuse.org/repositories/Emulators:/Wine/15.4/Emulators:Wine.repo
  sudo zypper refresh
  sudo zypper install wine-staging
  wine --version
  # adjust windows version to latest
  winecfg
  wine AdobeDNGConverter_x64_16_2_1.exe
  sudo zypper install aspell
  # adding tex support to a system is a substantial large install
  # you could export the latex source and upload to a website like
  # overleaf and have their system render the pdf from the latex source
  # if you are doing a lot of updates it might be annoying to keep
  # refreshing, but if you just do something occassionally it might be
  # sufficent
  sudo zypper install texlive texlive-pdflatex
  pandoc -f markdown -t org -o note.org /tmp/md_note.md
  python3.11 -m pip install exifread
  python3.11 -m pip install hyfetch
  python3.11 -m pip install trash-cli
  sudo rsync -avh --delete <copy from path> <copy to path>
  sudo rsync -avh --delete /run/media/david/140a6cd2-c07c-4339-bb9a-c87b592bafe5/ /run/media/david/01d0e521-1a65-41ad-a1b2-e77f68c41894/
  sudo rsync -avh --delete --exclude='.cache/' --exclude='*~' /home/david/ .
  sudo mkdir /mnt/internal_data/
  sudo blkid # find drive uuid
  # edit /etc/fstab - man fstab for details if needed
  # add line:
  # openSUSE
  UUID=140a6cd2-c07c-4339-bb9a-c87b592bafe5  /mnt/internal_data      btrfs  user                          0  0
  # Manjaro
  UUID=140a6cd2-c07c-4339-bb9a-c87b592bafe5  /mnt/internal_data      btrfs  users                         0  0
  sudo snap install mpv
  find /path/to/search -type d \( -iname "*elfeed*" -o -iname ".*elfeed*" \)
  sudo rsync -avh /run/media/david/AmazonThumbDrive/reorganized_emails/ /home/david/Maildir/reorganized_emails/
  ln -s /home/david/reorganized_emails /home/david/Maildir/reorganized_emails
  awk '{for(i=1;i<=NF;i++){printf "%s%s",$i,(i%10==0? ".\n":" ")}}' input.txt > output.txt
  # https://photoqt.org/downpopupflatpak
  # https://flathub.org/apps/org.photoqt.PhotoQt
  flatpak install flathub org.photoqt.PhotoQt
  # https://www.xnview.com/en/xnviewmp/
  # https://flathub.org/apps/com.xnview.XnViewMP
  flatpak update
  sudo snap refresh
  # iname is case insensitive (versus name)
  find ~/ -iname "*vim*"
  rsync -av --remove-source-files ~/Maildir/gmail/INBOX/ ~/Maildir/reorganized_emails/
  mv ~/Maildir/gmail/INBOX/* ~/Maildir/gmail/Trash/
  mbsync -a
#+end_src
**** Trash-cli commands
- trash-put           trash files and directories.
- trash-empty         empty the trashcan(s).
- trash-list          list trashed files.
- trash-restore       restore a trashed file.
- trash-rm            remove individual files from the trashcan.
#+begin_src bash
  # add to .bashrc
  alias rm='echo "use trash-put or backslash rm to use rm normally"; false'
#+end_src
**** Other Random openSUSE Links
- [[https://en.opensuse.org/Additional_package_repositories]]
- [[https://www.techhut.tv/opensuse-5-things-you-must-do-after-installing/]]
*** Linux Distributions
We are lucky there are so many great distributions out there, here a few but
there are many more.
- [[https://fedoraproject.org/]]
- [[https://www.linuxmint.com/]]
- [[https://pop.system76.com/]]
- [[https://system76.com/]]
  - company sells computers with pop OS pre-installed
- [[https://ubuntu.com/]]
- [[https://manjaro.org/][https://Manjaro.org/]]
*** Apps
- Adobe DNG Converter (windows app run through emulation on wine)
  - [[https://helpx.adobe.com/camera-raw/using/adobe-dng-converter.html]]
  - [[https://helpx.adobe.com/camera-raw/digital-negative.html]]
  - [[https://www.adobe.com/creativecloud/file-types/image/raw/dng-file.html]]
- Alacritty terminal emulator
  - installed from snap - neovim seems to works better in terminal emulators
    like Alacritty.
  - [[https://alacritty.org/]]
- Brave Browser
  - [[https://brave.com/linux/]]
- Emacs - installed from snap
  - [[https://snapcraft.io/emacs]]
- Espeak
  - installed from system package manager
- FD find entries on your file system
  - [[https://github.com/sharkdp/fd]]
  - installed from system package manager
- Handbrake
  - [[https://handbrake.fr/downloads.php]]
  - Flatpak - [[https://flathub.org/apps/fr.handbrake.ghb]]
- MEGA (online backup)
  - [[https://help.mega.io/installs-apps/desktop-syncing]]
    [[https://help.mega.io/installs-apps/desktop-syncing/linux]]
    [[https://mega.io/desktop#download]]
    [[https://mega.nz/linux/repo/]]
- Mbsync
  - installed from system package manager
  - called isync in package manager
- Microsoft Edge Browser
  - [[https://www.microsoft.com/en-us/edge/download?form=MA13FJ]]
- Neovim
  - [[https://github.com/neovim/neovim/blob/master/INSTALL.md]]
- Newsboat
  - installed from snap - [[https://snapcraft.io/newsboat]]
- Notmuch
  - installed from system package manager
- Opera Browser
  - [[https://www.opera.com/download]]
  - RPM is hidden further down on page or can be installed from snap
  - [[https://snapcraft.io/opera]]
- Pandoc
  - [[https://pandoc.org/installing.html]]
  - installed from system package manager
- Ripgrep (rg)
  - Has some similarities to grep, but also includes its own defaults and
    optimizations that make it behave slightly differently in some cases.
  - [[https://github.com/BurntSushi/ripgrep]]
  - installed from system package manager
- The Silver Searcher (ag)
  - Behavior and syntax are very close to GNU grep.
  - [[https://github.com/ggreer/the_silver_searcher]]
- Vivaldi Browser
  - [[https://vivaldi.com/download/]]
  - [[https://help.vivaldi.com/desktop/install-update/manual-setup-vivaldi-linux-repositories/]]
- Wine (windows emulation)
  - [[https://wiki.winehq.org/Download]]
*** Configurations and Tweaks
**** Alacritty
***** Main Configuration From Here
- [[https://github.com/Widkidone/AlacrittyToml/blob/main/alacritty.toml]]
***** Other Interesting Configurations
- [[https://github.com/sabinpocris/alacritty.toml/blob/main/alacritty.toml]]
- [[https://github.com/scalarwaves/dotfiles/blob/main/alacritty/alacritty.toml]]
Neovim does not work fully without a Nerd Font set as your terminal font
[[https://www.nerdfonts.com/]]
#+begin_src toml
  [font.bold]
  family = "UbuntuMono Nerd Font"
  style = "Bold"
  [font.bold_italic]
  family = "UbuntuMono Nerd Font"
  style = "Bold Italic"
  [font.italic]
  family = "UbuntuMono Nerd Font"
  style = "Italic"
  [font.normal]
  family = "UbuntuMono Nerd Font"
  style = "Regular"
#+end_src
** Text Editing Resources
*** Introduction Text
Text editing is incredibly valuable for programming, note taking, organizing and
reviewing written information. Here is a collection of thoughts and links I have
found to be valuable.

A lot of people on reddit and on forums ask if it is worth learning the vim
normal mode keybindings. I believe if you work in a text a certain amount of
time it is worth learning, but if you only do small amounts of time in a text
editor it may not be worth it. Here is a way to think about this, if you do
programming in a text editor more than a couple hours a week I would say it is
worth learning. If you write notes or read a lot of text more than a couple of
hours a week then it may also be worth learning. However, please note that folks
who do not program are a little more mixed on whether it is worth the time to
learn and use, whereas programmers tend to find it worth the time to learn. It
is not just a productivity boost, it is also more engaging and fun as you work
through code.

If you are a programmer I recommend trying and learning the basics of all three
major text editors which are Visual Studio Code, neovim (or original vim) and
emacs. If you are a writer there are specific setups (distributions) that you
can find for these tools that are targeted for that type of work. I mostly
program and take notes so that is how I focus on these tools. If you are a
programmer the Visual Studio Code with the add-on (extension) vscodevim provides
a setup that you can have up and running super fast that allow you to learn the
ways of vim but have all of the modern conveniences of a high end text editor
working right away. Make sure you go through all of the extensions settings and
turn on some of the plugins if you want to get familiar with them. They are not
all enabled by default. Emacs with vi emulation. Emacs has a robust platform
with tremendous built in functionality. Plus you can extend it with add-ons and
you can have custom functions you can easily add. OpenAI ChatGPT, Google Gemini
can generate custom functions you can add to your emacs configuration. Make sure
you add a unique prefix to any custom functions so you do not create any name
conflicts. If you do not like the vim keybindings Emacs has the most other
options available including variations of the vim keybindings and keybindings
that are completely different or can be customized to suite your needs. The only
slight downside if you go these routes is that they are only readily available
for emacs, but luckily emacs can be infinitely customized and extended.

Examples of other keybinding options: First a quick note on the vanilla Emacs
keybindings. I have spent time learning them and they are really hard on your
hands. The only way you can sort of mitigate that issue is by having a custom
keyboard where you can reprogram the buttons so you do not put strain on your
pinky. God mode and devil mode can also solve the hand fatigue problem. Yes,
emacs pinky is actually a problem and hand fatigue in general. If you do want to
learn the vanilla keybindings they are very logical once you get used to them
and they pair well with either god mode or devil mode.

Xah Fly Keys is the most efficient system for programmers, but only readily
available for emacs. I like the flexibility of moving between neovim, visual
studio code and emacs so I prefer vim keybindings even though they are less
efficient. I would only consider learning Xah Fly Keys if you program more than
80% of your time and you are ok being locked into emacs. The author asks for
donations for folks who use his tools. Of course it is requested that people
donate to all open source projects that help them if they can afford to do so.

Boon is a well thought out system, again only for emacs. I like some of the
thoughts and layouts that are in the system. It is clearly a smart design, but I
do feel that the benefits it gives you are not really worth the effort learning
it.

Meow is a variation on the vim keybindings. The only problem I have with that is
if I switch between Meow and standard vim it is too confusing to my brain
because they are so similar. It is almost easier to keep two different systems
distinguished in your brain if they are totally different. A lot of people
really like Meow and it is really easy to make adjustments to the setup of it. I
would say if you are leaving vim and not going to go back you might really enjoy
the improvements that Meow makes.

Wakib: Emacs for the rest of us. This is both a minor mode and a starter kit.
This is incredibly well thought out. I like the keyboard layout it is very
logical and similar to some of the other systems mentioned above. This feels
very well polished with the starter kit giving you a lot of functionality right
away.

**** Links
- [[https://www.youtube.com/watch?v=rK51Lp_lreI][Intro to Wakib, an Emacs Starter Kit]]
- [[https://github.com/darkstego/wakib-emacs]]
- [[https://github.com/darkstego/wakib-keys]]
- [[https://ergoemacs.github.io/]]
- [[https://github.com/xahlee/xah-fly-keys]]
- [[https://www.youtube.com/watch?v=-iDJV2GPjEY][The Most Efficient Emacs Workflow, more efficient than vim]]
- [[https://www.youtube.com/watch?v=deg74diF_2Q&t=1445s][Xah Talk Show 2023-10-25 Xah Fly Keys, Bill Gosper Equations, Game of Life]]
- [[https://www.youtube.com/watch?v=TXKlr67qSlc&t=14s][Xah Talk Show Ep532 What Happens When You Blog for 25 Years]]
- [[https://www.youtube.com/watch?v=giwqQY1inn0][intro to svalboard datahand, best input device]]
- [[https://www.youtube.com/watch?v=KZA6tojsGfU][Xah Talk Show Ep541, emacs org-mode key, WolframLang tiling, plane curves, math]]
- [[https://www.youtube.com/watch?v=ypjsgrpG1r4][xah emacs talk show 2019-01-07 xah-html-mode vs org mode]]
- [[https://www.youtube.com/watch?v=-vQ56wu30Lg][emacs xah fly keys intro]]
- [[https://github.com/emacsorphanage/god-mode]]
- [[https://github.com/jyp/boon]]
- [[https://github.com/susam/devil]]
- [[https://www.youtube.com/watch?v=MPSkyfOp5H8][Emacs Packages for Modal Editing - System Crafters Live!]]
- [[https://systemcrafters.net/live-streams/april-21-2023/]]
I think it is important to try out multiple setups and it is ok to use multiple
approaches. I recommend learning emacs, neovim and trying out Visual Studio Code
as well. I rotate between all three and I have learned the most this way. Some
problems I know how to solve in all three, some problems I only know how to
solve in one of the three. Whenever I am trying to learn how to do something
efficiently I search for the solution in emacs plus neovim to learn whatever I
can. If I have time I will look later at Visual Studio code as well to see how
folks solve the problem in that ecosystem. Emacs and neovim are first only
because they are the most flexible and extendable.

Emacs can read written text out loud in audio format text-to-speech. It has a
robotic voice, but I actually prefer that when I am trying to study or review
certain kinds of information.

You can take a video and extract the audio and then transcribe it with a paid
service like this one [[https://turboscribe][https://turboscribe.ai]]. Then you can read it or have Emacs
perform text-to-speech. This allows you to review the information at different
speeds. It allows a more consistent pace to be possible. It allows for searching
through information.

Emacs has a built in web browser, it is handy if you have a text heavy document
that you want open side by side with a place to take notes in emacs. It does not
replace full featured web browsers but is still helpful for reference document
review.

Neovim and Emacs both have distributions. A lot of people tell you to build your
own configuration. It can take a long time to really understand how to setup
your own configuration to best optimize your workflows. I like how the
distributions usually offer keybindings decided on with a logical layout. It is
helpful to build your own config because you learn so much. I think the best
answer is to do both a custom config and try using the distributions to learn as
much as possible.
- [[https://gitlab.com/public-repositories/emacs-groundup/-/blob/main/src/docs/emacs-groundup.org]]
*** Learning The Vim Keybindings - Video Game For Vim Keybindings
- [[https://vim-adventures.com/]]
I highly recommend playing this game. I have to confess that I find the game
frustrating, but it helps you learn, so I feel it is worth the trouble of
playing the game and paying for it. As long as you know you want to build vim
skills, then it is worth the trouble to play the game in my opinion. You can
play the game a little while for free, after that you have to pay. At first I
was not willing to pay for it, but I decided to just do it anyway and I am
really glad I did. It forces you to learn the vim motions in a different context
and makes you more effective in text editing contexts.

The reason why I find the game frustrating is the author does not give you
enough information for you to know what you are supposed to do. He does this on
purpose to challenge you, but I wish he added more of a hint system in the game
to give you a bit more information to work with, but please do not let this
detour you from working through the challenges.

I recommend you play the game and struggle as much as possible before trying to
find any answers online.

I have some mental/brain challenges with working through a game like this, so I
know others may also experience challenges where it may be very difficult for
you to figure out what to do in the game.

First take a break and try the problem again. Look at the motions available to
you and think about creative ways to use them.

Instead of looking up an answer you can also email the author for a hint. He
tries not to give you the answer but prefers just to give you a hint so you can
try to figure it out.
- [[https://github.com/pepers/vim-adventures]]
This has answers in text form from Level 8 to the Last Level of the main story
line. This does not cover the Macro puzzles. There are some small mistakes in
the document, but it is mostly correct.
**** Videos From Vomikod
Playlist
- [[https://youtube.com/playlist?list=PLl3Gy8rm8g9THKPnmbegeeiu0NvmbLg-V&si=Kc9uqQXNbWAoJTA7]]
Plays through levels 1 -- Last Level, videos are not in English -- there is at
least one puzzle that had a small change implemented since he recorded these
videos, but it is mostly accurate to the current game.
The game authors YouTube Channel:
- [[https://www.youtube.com/@DoronLinder/videos][https://www.youtube.com/@DoronLinder/videos]]
Videos of note:
- Video Explaining the Game
- Level 1 -- How to cross the ocean information
- Explains Level 5 where is the hidden key
**** File Formats For Note Taking
Org, AsciiDoc and Markdown are a few examples of popular formats for taking
notes. There are more options out there then these three. You can use plain text
documents (txt) if you just want to copy and paste a bunch of information into a
file that you can search or grep later to find. If you are organizing
information that you are going share with others or need the document to be more
structured for your own reference then org and Markdown formats are worth
learning and using. If you need highly structured control over formatting above
what AsciiDoc, Markdown and Org can provide then look into LaTeX. Note you can
use a tool called Pandoc to convert these formats to other formats. So you do
not need to go to the LaTeX level which is very involved unless you need very
specific formatting for PDFs or print.
***** Short Videos Note Taking
****** Is Neovim The Ultimate Note Taking Tool?
- [[https://www.youtube.com/watch?v=vdBkQ4jT2OE]]
Org style notation that can be exported to other formats Author has transitioned
to this system instead now (I like the simpler approach above, but this does
offer more):
- [[https://www.youtube.com/watch?v=5ht8NYkU9wQ&t=5s]]
***** Long Videos Note Taking
- [[https://www.youtube.com/@mischavandenburg/videos][https://www.youtube.com/@mischavandenburg/videos]]
****** Videos Of Interest
- FULL NEOVIM Configuration Walkthrough As A DevOps Engineer On MacOS
- Ultimate Notetaking: My Neovim Zettelkasten Based on Obsidian - Complete Walkthrough
- My Entire Neovim + Tmux Workflow As A DevOps Engineer On MacOS
I like the style and approach of how he uses Markdown and his workflows. When
you install neovim it is bare bones, so you can add distribution layer on top of
the base that makes it easy to use and awesome right away, you can still
customize it further to meet your needs but it gives you a good out of the box
experience.
*** Neovim Distributions
- [[https://nvchad.com/]]
- [[https://www.lunarvim.org/]]
- [[https://astronvim.com/]]
- [[https://www.lazyvim.org/]]
funny video about note taking if you jump to 14:43 his explanation of emacs and
21:20 for neovim or watch the whole thing for entertainment and additional
context:
- [[https://www.youtube.com/watch?v=XRpHIa-2XCE]]
Popular series on doom Emacs:
- [[https://www.youtube.com/@DistroTube/videos][https://www.youtube.com/@DistroTube/videos]]
Japanese app author shares his neovim setups, his app is a note taking app, very
inspirational:
- [[https://www.youtube.com/@devaslife/videos][https://www.youtube.com/@devaslife/videos]]
*** RSS Feeds
- [[https://nullprogram.com/feed/]]
- [[https://planet.emacslife.com/atom.xml]]
- [[https://www.reddit.com/r/emacs.rss]]
- [[https://www.reddit.com/r/neovim.rss]]
- [[https://www.reddit.com/r/vim.rss]]
- [[https://neovim.io/news.xml]]
- [[https://dotfyle.com/this-week-in-neovim/rss.xml]]
- [[https://protesilaos.com/master.xml]]
- [[https://sachachua.com/blog/feed]]
*** The Primeagen Related Links - Michael Paulson
- [[https://youtube.com/@ThePrimeagen/videos]]
- [[https://www.youtube.com/@ThePrimeTimeagen/videos][https://www.youtube.com/@ThePrimeTimeagen/videos]]
- [[https://www.youtube.com/@TheVimeagen/videos][https://www.youtube.com/@TheVimeagen/videos]]
- [[https://www.twitch.tv/theprimeagen]]
- [[https://kinesis-ergo.com/prime360/][Discount Codes on Kinesis Official Website - they have many types of keyboards so make sure you look through all of the options.]]
- [[https://twitter.com/ThePrimeagen]]
- [[https://www.instagram.com/ThePrimeagen/]]
- [[https://www.tiktok.com/@theprimeagen][https://www.tiktok.com/@theprimeagen]]
- [[https://discord.gg/ThePrimeagen]]
- [[https://linktr.ee/ThePrimeagen]]
- [[https://github.com/ThePrimeagen]]
- [[https://github.com/ThePrimeagen?tab=repositories]]
- [[https://github.com/ThePrimeagen/ThePrimeagen]]
- [[https://github.com/ThePrimeagen/yt]]
- [[https://frontendmasters.com/courses/vim-fundamentals/]]
- [[https://frontendmasters.com/teachers/the-primeagen/]]
- [[https://github.com/hakluke/how-to-exit-vim][How to exit vim - just a silly lol article - if you do need to quit ESC :q! (quit do not save changes) or ESC :wq (write/save your changes and quit)]]
- [[https://www.youtube.com/watch?v=ZRnWmNdf5IE][From Vim To Zed]]
- [[https://www.boot.dev/?promo=PRIME][Boot.dev - Learn Backend Development the Smart Way - Primeagen Discount Link]]
*** Emacs M-x Commands I randomly use
- auto-fill-mode - automatically inserts line lines at specified line width
- avy-copy-line
- avy-move-line
- capitalize-word
- check-parens
- dired
- display-fill-column-indicator-mode
- eshell
- flush-lines (with parameter ^$) - deletes blank lines in highlighted region
- greader-mode
- ibuffer
- olivetti-mode
- org-insert-link
- org-lint
- org-sort
- org-sort-list
- query-replace-regexp
- set-variable
- sort-fields
- sort-lines
- sort-numeric-fields
- treemacs-edit-workspaces
- turn-off-evil-mode
- turn-on-evil-mode
- visual-line-mode
- wakib-keys
- whitespace-cleanup
- whitespace-mode
- yank-from-kill-ring
*** Greader Notes
First you have to install espeak on your system. Then install greader.
**** My Greader Workflow In Detail
Open Emacs then open the text file I want to have read to me with the robotic
voice. Note the reading speed of the robot is set in your Emacs configuration
file with variable: ~(setq greader-espeak-rate 400)~. You vary the number to
whatever suites your preferred speaking pace. I would keep in mind that since it
is reading text it is not perfectly comparable to the rate that people talk or
what speed you would normally read. So just try different speeds until you find
what works best for you.

A customization I like to use it to toggle zen mode before reading. You have to
turn off evil mode for using greader - well you could use it by customizing a
bunch of stuff, but I just disable and re-enable it when I am done. =M-x= type
=greader-mode ENTER=. To have it start reading you do =C-r SPACE= and to have it
stop you do =SPACE=.

I press =C-l= two or three times in a row to move the screen of text back up to
the top (you can press it twice to get it into the middle and three times to get
the text to the top) once the reading part gets to the bottom so it is easier
for me to continue reading and following it.
** Newsboat Configuration and My Youtube Playlist Watch list
*** config file
#+begin_example
  browser "xdg-open '%u'
  include /home/<username>/snap/newsboat/7551/.newsboat/dark
#+end_example
*** main color theme dark file
- [[https://github.com/catppuccin/newsboat/blob/be3d0ee1ba0fc26baf7a47c2aa7032b7541deb0f/themes/dark]]
#+begin_example
  color listnormal         color15 default
  color listnormal_unread  color2  default
  color listfocus_unread   color2  color0
  color listfocus          default color0
  color background         default default
  color article            default default
  color end-of-text-marker color8  default
  color info               color4  color8
  color hint-separator     default color8
  color hint-description   default color8
  color title              color14 color8
  highlight article "^(Feed|Title|Author|Link|Date): .+" color4 default bold
  highlight article "^(Feed|Title|Author|Link|Date):" color14 default bold
  highlight article "\\((link|image|video)\\)" color8 default
  highlight article "https?://[^ ]+" color4 default
  highlight article "\[[0-9]+\]" color6 default bold
#+end_example
*** alternative color theme latte (Catppuccin for Newsboat)
- [[https://github.com/catppuccin/newsboat/blob/be3d0ee1ba0fc26baf7a47c2aa7032b7541deb0f/themes/latte]]
#+begin_example
  color listnormal         color15 default
  color listnormal_unread  color2  default
  color listfocus_unread   color2  color15
  color listfocus          default color15
  color background         default default
  color article            default default
  color end-of-text-marker color8  default
  color info               color4  color7
  color hint-separator     default color7
  color hint-description   default color7
  color title              color14 color7
  highlight article "^(Feed|Title|Author|Link|Date): .+" color4 default bold
  highlight article "^(Feed|Title|Author|Link|Date):" color14 default bold
  highlight article "\\((link|image|video)\\)" color8 default
  highlight article "https?://[^ ]+" color4 default
  highlight article "\[[0-9]+\]" color6 default bold
#+end_example
*** urls
#+begin_example
"query:Unread Articles:unread = \"yes\""
"query:Read Articles:unread = \"no\""
"https://www.youtube.com/feeds/videos.xml?channel_id=UCrD-hWKNvXuXc5mO9Cmatiw" ;Alan Young
"https://www.youtube.com/feeds/videos.xml?channel_id=UCp5I_JY2q6zSxl7zQbOGs3g" ;Andrew Banner
"https://www.youtube.com/feeds/videos.xml?channel_id=UCx3Vist13GWLzRPvhUxQ3Jg" ;Andrew Courter
"https://www.youtube.com/feeds/videos.xml?channel_id=UCzxrJKoiArcfvgIEm7SKNoQ" ;Camera Club Live
"https://www.youtube.com/feeds/videos.xml?channel_id=UCYeiozh-4QwuC1sjgCmB92w" ;DevOps Toolbox
"https://www.youtube.com/feeds/videos.xml?channel_id=UCVls1GmFKf6WlTraIb_IaJg" ;DistroTube
"https://www.youtube.com/feeds/videos.xml?channel_id=UCEqYjPJdmEcUVfHmQwJVM9A" ;Emacs Elements
"https://www.youtube.com/feeds/videos.xml?channel_id=UCtKfDKimsrfdrc7ziqwutTA" ;Fabian Fopp - Nature
"https://www.youtube.com/feeds/videos.xml?channel_id=UCJetJ7nDNLlEzDLXv7KIo0w" ;Gavin Freeborn
"https://www.youtube.com/feeds/videos.xml?channel_id=UCmjNQjjxPOP9jMTQAqaP1PQ" ;Gordon Laing
"https://www.youtube.com/feeds/videos.xml?channel_id=UCBG4ZzTTBVg23yVdQhztnfQ" ;Jason Vong
"https://www.youtube.com/feeds/videos.xml?channel_id=UCgaqvHn_b2LX3uHXl3C-xhA" ;Joe Allam
"https://www.youtube.com/feeds/videos.xml?channel_id=UC_NZ6qLS9oJgsMKQhqAkg-w" ;Josean Martinez
"https://www.youtube.com/feeds/videos.xml?channel_id=UCEXI2eXmkRgrffp-GfUakVA" ;Kobie M-C Pentax
"https://www.youtube.com/feeds/videos.xml?channel_id=UCJQcBYfgescGRJUzU6IMCMw" ;Kyle McDougall
"https://www.youtube.com/feeds/videos.xml?channel_id=UCxQKHvKbmSzGMvUrVtJYnUA" ;Learn Linux TV
"https://www.youtube.com/feeds/videos.xml?channel_id=UC_xZQahxGiBYO7XS18porJQ" ;Leehaze1
"https://www.youtube.com/feeds/videos.xml?channel_id=UCJ9XPzyAZ4JP1HqxAN71dMQ" ;Micael Widell on  Macro
"https://www.youtube.com/feeds/videos.xml?channel_id=UCMa8ly-Asz6eF6MlTvKZOcQ" ;Micael Widell on Life
"https://www.youtube.com/feeds/videos.xml?channel_id=UCroPb3jYeQaU1o-luEVsJ-A" ;Mike Riley
"https://www.youtube.com/feeds/videos.xml?channel_id=UC_7KM3ANRHy2zhQ_zl-C4XQ" ;Nathan Cool Photo
"https://www.youtube.com/feeds/videos.xml?channel_id=UCLcKQhTO6i0oq10S234vWyA" ;Nick Carver
"https://www.youtube.com/feeds/videos.xml?channel_id=UCFaYVrisXbyfOUd6L7vj5kg" ;Olle Nilsson
"https://www.youtube.com/feeds/videos.xml?channel_id=UCoJP9pYqZjiJOlR4UWdPhow" ;PetaPixel
"https://www.youtube.com/feeds/videos.xml?channel_id=UC0uTPqBCFIpZxlz_Lv1tk_g" ;Protesilaos Stavrou
"https://www.youtube.com/feeds/videos.xml?channel_id=UCcVyr6JVlLsqTqoif6mZkSQ" ;Richard Wong
"https://www.youtube.com/feeds/videos.xml?channel_id=UCeLeR_BosxhrE1Mm0KPRgSg" ;Ron Durant Photographer Nikon
"https://www.youtube.com/feeds/videos.xml?channel_id=UCKq3tXnvXnA0feJYmOx9MPw" ;Stefano Ianiro Nature
"https://www.youtube.com/feeds/videos.xml?channel_id=UCAiiOTio8Yu69c3XnR7nQBQ" ;System Crafters
"https://www.youtube.com/feeds/videos.xml?channel_id=UC4xKdmAXFh4ACyhpiQ_3qBw" ;TechLead
"https://www.youtube.com/feeds/videos.xml?channel_id=UC_us_hH43AJtU_A-iXCLmqw" ;TechLead Show
"https://www.youtube.com/feeds/videos.xml?channel_id=UCgHJi_FdfoFGyRl_RYp361A" ;Teo Crawford
"https://www.youtube.com/feeds/videos.xml?channel_id=UC-0cdtgZF01T3N8drruyikg" ;The Hybrid Shooter
"https://www.youtube.com/feeds/videos.xml?channel_id=UCylGUf9BvQooEFjgdNudoQg" ;The Linux Cast
"https://www.youtube.com/feeds/videos.xml?channel_id=UCCaZ_-RGI5tc-KIzYBNXkOA" ;Tin House Studio
"https://www.youtube.com/feeds/videos.xml?channel_id=UCo71RUe6DX4w-Vd47rFLXPg" ;Typecraft
"https://www.youtube.com/feeds/videos.xml?channel_id=UC-Jmw9-Jcq7lCuK-8t7_kiA" ;Ulanzi
"https://www.youtube.com/feeds/videos.xml?channel_id=UCBKNuaxVlSNvIN139KplUKw" ;Vhyrro Vhyrro neovim
#+end_example
** FAQs
*** Which text editor do you recommend the most?
Emacs. It offers the most customization, flexibility, add-ons/plugins...
basically an incredible ecosystem. The wide variety of tools can help in many
areas, for example:
- You can set a text to speech to read to you.
- You can use a variety of terminals.
- You can edit text using any methodology you want including vim keybindings.
- You can navigate your file system using dired
- You can optimize your workflows by having more tasks inside of Emacs.
- You have full org mode support for text tasks which then can be exported to a myriad of formats.
*** Which text format do you recommend the most?
The org format from Emacs org mode. It is a more consistent implementation
compared to Markdown. Although Markdown is not really that bad, Emacs has a
robust Markdown mode if you do need that format. You can also convert from org
documents to Markdown using Pandoc. Org mode can seem a little overwhelming at
first because it can do so much. However, learning the basics can allow you to
do the same things that Markdown allows but have the flexibility to expand what
you use it for if needed. Look at Orgdown if you want a simpler starting point
then full org mode. Another interesting feature is you can use code blocks and
then tangle them to export the code blocks to a separate file. This is called
literate programming allows you to create one file and then have different
exports for documentation and for code. You only have to maintain one file, but
you create whatever exports you need. Another option of note is AsciiDoc which
has better formatting than Markdown and can be converted using Pandoc to lots of
formats as well. It seems to be popular for technical publishing, including but
not limited to producing actual technical books, README files, man pages,
articles and taking notes.
*** Which system do you recommend learning for emacs keybindings between evil, vanilla emacs, xah fly keys, boon, meow, wakib?
My answer on this question has changed multiple times. Many people were shocked
when the great YouTuber David Wilson of System Crafters channel switched from
evil back to vanilla Emacs keybindings. His reasoning was then he does not
have to context switch as much and there is more consistency as he moves around
to different parts of Emacs. It also allows him to use plain Emacs with
efficiency without having to worry about getting evil mode installed to complete
basic tasks. I do agree with this logic. You can always add god or devil mode to
translate the normal Emacs keybindings without as much hand strain. Then you can
also learn from books more easily since you are using the default keybindings
and not a custom setup. If you are not going to learn the Emacs keybindings in
depth you might want to try wakib as it is very logical and well thought out. If
you want to be able to use the same keybindings in multiple programs then you
would be either learning some of the vim ways as that is the only one that spans
emacs, neovim and vscode as an option. Of course if you use vscode normally
without the vim plugin and emacs in wakib mode then it can be close enough for
many people. There is a basic wakib plugin for vscode but it does not have many
of the features that the emacs version has, but it does provide some basics.
** Additional Links
- https://asciidoc.org/
- https://powerman.name/doc/asciidoc
- https://pandoc.org/
- Vim/Neovim: [[https://github.com/YanivZalach/Vim_Config_NO_PLUGINS]]
- Vim/Neovim: [[https://github.com/YanivZalach/Vim_Config]]
- Neovim: [[https://github.com/YanivZalach/Nvim_Config]]
- Emacs: [[https://github.com/doomemacs/doomemacs]]
- Emacs: [[https://github.com/corgi-emacs/corgi]]
- Markdown: [[https://www.markdownguide.org/]]
- Org Mode: [[https://orgmode.org/]]
- LaTeX (if you need precise formatting control): [[https://www.latex-project.org/]]
- Github Markdown: [[https://docs.github.com/en/get-started/writing-on-github]]
- Markdown Cheat Sheet: [[https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet]]
- Markdown Here: [[https://github.com/adam-p/markdown-here]]
- Emacs: [[https://distro.tube/]]
- Emacs: [[https://emacsconf.org/2023/talks/]]
- Emacs: [[https://emacs.stackexchange.com/]]
- Emacs: [[https://github.com/daviwil/dotfiles/]]
- Emacs: [[https://github.com/daviwil/emacs-from-scratch]]
- Emacs: [[https://github.com/Gavinok/emacs.d]]
- Emacs: [[https://github.com/susam/dotfiles]]
- Emacs: [[https://github.com/susam/emfy]]
- Emacs: [[https://github.com/SystemCrafters/crafted-emacs]]
- Emacs: [[https://gitlab.com/Clsmith1]]
- Emacs: [[https://gitlab.com/dwt1]]
- Emacs: [[https://gitlab.com/protesilaos/dotfiles]]
- Emacs: [[https://planet.emacslife.com/]]
- Emacs: [[https://protesilaos.com/]]
- Emacs: [[https://protesilaos.com/emacs/]]
- Emacs: [[https://protesilaos.com/emacs/iosevka-comfy-pictures]]
- Emacs: [[https://systemcrafters.net/emacs-from-scratch/]]
- Emacs: [[https://www.masteringemacs.org/]]
- Emacs: [[https://www.masteringemacs.org/book]]
- Font GNU Unifont on Wikipedia:
  [[https://en.wikipedia.org/wiki/GNU_Unifont]]
- Font Unifont Download: [[https://ftp.gnu.org/gnu/unifont/]]
- Font Unifont: [[http://unifoundry.com/unifont/index.html]]
- Font YouTube Video about Unifont: [[https://www.youtube.com/watch?v=ckrkW8VHRIs]]
- YouTube Channel: [[https://www.youtube.com/@bwestbro/videos][https://www.youtube.com/@bwestbro/videos]]
- YouTube Channel: [[https://www.youtube.com/@DistroTube/videos][https://www.youtube.com/@DistroTube/videos]]
- YouTube Channel: [[https://www.youtube.com/@linuxtechgeek/videos][https://www.youtube.com/@linuxtechgeek/videos]]
- YouTube Channel: [[https://www.youtube.com/@protesilaos/videos][https://www.youtube.com/@protesilaos/videos]]
- YouTube Channel: [[https://www.youtube.com/@SystemCrafters/videos][https://www.youtube.com/@SystemCrafters/videos]]
- YouTube Channel: [[https://www.youtube.com/@mzamansky/videos][https://www.youtube.com/@mzamansky/videos]]
- YouTube Channel: [[https://www.youtube.com/@abcdw/videos][https://www.youtube.com/@abcdw/videos]]
- YouTube Channel: [[https://www.youtube.com/@GavinFreeborn/videos][https://www.youtube.com/@GavinFreeborn/videos]]
- YouTube Channel: [[https://www.youtube.com/@emacselements/videos][https://www.youtube.com/@emacselements/videos]]
- Neovim: [[https://github.com/rvbug/neovim]]
- Neovim: [[https://github.com/NormalNvim/NormalNvim]]
- Neovim: [[https://github.com/rockerBOO/awesome-neovim]]
- Neovim:
  [[https://dotfyle.com/neovim/plugins/top?categories=preconfigured]]
- Vim: [[https://github.com/ibhagwan/vim-cheatsheet]]
- Vim: [[https://github.com/vbd/Fieldnotes/blob/main/vim.md]]
- Emacs: [[http://yummymelon.com/devnull/announcing-casual-an-opinionated-porcelain-for-emacs-calc.html]]
- Emacs: [[https://xenodium.com/my-emacs-eye-candy/]]
- Emacs: [[https://github.com/xenodium/dotsies]]
- Neovim: [[https://github.com/itsvinayak/TurboNvimConfig.nvim]]
- Vim/Neovim: [[https://www.youtube.com/watch?v=5BU2gBOe9RU][YouTube Video: Vim Tips I Wish I Knew Earlier by Sebastian Daschner]]
- Neovim: [[https://www.youtube.com/watch?v=6pAG3BHurdM][YouTube Video: How I Setup Neovim On My Mac To Make It AMAZING In 2024 by Josean Martinez]]
- [[https://github.com/trishume/dotfiles]]
- [[https://github.com/trishume]]
- [[https://elpa.gnu.org/packages/greader.html]]
- [[https://github.com/emacs-straight/greader]]
- [[https://github.com/emacs-straight]]
- [[https://espeak.sourceforge.net/]]
- [[https://github.com/espeak-ng/espeak-ng]]
- [[https://github.com/thinkhuman/writingwithemacs]]
- [[https://www.gnu.org/manual/manual.html][GNU Manuals Online]]
- [[https://www.gnu.org/doc/doc.html][Documentation of the GNU Project]]
- [[https://www.gnu.org/software/emacs/documentation.html][GNU Emacs Documentation & Support]]
- [[https://www.gnu.org/software/emacs/manual/index.html][GNU Emacs Manuals Online]]
- [[https://www.gnu.org/software/emacs/refcards/index.html][GNU Emacs Reference Cards]]
- [[https://www.gnu.org/doc/other-free-books.html][Free Books from Other Publishers]]
- [[https://github.com/SilverSnake0/File-Automated-Assistant-Mover][SilverSnake0/File-Automated-Assistant-Mover Excellent Python Toolkit for Organizing and Searching Files - You can run it on a folder and it will sort all of the loose files into file type sub folders and it will not mess with your existing subfolders - it also has tools for searching and finding through sets of files uses python 3]]
- [[https://www.youtube.com/@cantucodes/videos][Cantu Codes - Weekly Neovim Plugin Series]]
- [[https://github.com/alextricity25/nvim_weekly_plugin_configs][Alex Cantu Github for Code from the Weekly Neovim Plugin Series]]
- [[https://www.youtube.com/watch?v=jgogUgeuBPo][goparism youtube channel video: Where To Learn Emacs in 2024]]
- [[https://www.youtube.com/@goparism/videos][goparism youtube channel]]
- [[https://francopasut.netlify.app/post/markdown-vim-emacs-sublime-vscode/][Markdown with Vim, Emacs, Sublime Text 4 and Visual Studio Code - Franco Pasut]]
- [[https://karl-voit.at/2017/09/23/orgmode-as-markup-only/][Article Org Mode Syntax Is One of the Most Reasonable Markup Languages to Use for Text]]
- [[https://missing.csail.mit.edu/2020/editors/]]
- [[https://www.youtube.com/watch?v=aiBt8CieE7U][Gavin Freeborn - Double Your Productivity With Emacs Org-Mode]]
- [[https://www.youtube.com/watch?v=DEeStDz_imQ][Gavin Freeborn - 5 Reasons I Love Emacs Orgmode]]
- [[https://www.youtube.com/watch?v=0-brF21ShRk][Gavin Freeborn - You Should Really Learn Org Mode - It's Easy]]
- [[https://protesilaos.com/codelog/2024-04-24-re-what-keeps-you-emacs/][Protesilaos Stavrou - Re: what keeps you coming back to Emacs?]]
- [[https://protesilaos.com/commentary/2024-04-10-joy-of-writing/][Protesilaos Stavrou - The joy of writing]]
- [[https://www.youtube.com/watch?v=-ybCiHPWKNA][TheVimeagen - Teaching Neovim From Scratch To A Noob]]
- [[https://gitlab.com/publicvoit/orgdown/-/blob/master/README.org][https://gitlab.com/publicvoit/orgdown/-/blob/master/README.org]]
  - Orgdown (in short “OD) is a lightweight markup language similar to Markdown
    but it’s consistent, easy to learn, simple to type even without
    tool-support, and it is based on its older brother: Org-mode
  - The purpose of this site is to provide basic information on the Orgdown
    syntax, supported software programs, mobile apps, services, and parsers.
- [[https://www.youtube.com/watch?v=mmqDYw9C30I][Josean Martinez - 7 Amazing CLI Tools You Need To Try]]
- [[https://www.youtube.com/watch?v=uOnL4fEnldA][Josean Martinez - How To Make Your Boring macOS Terminal Amazing With Alacritty (some of the tips apply to linux Alacritty use as well)]]
- https://github.com/james-stoup/org-mode-better-defaults
- https://github.com/james-stoup/emacs-org-mode-tutorial/
- https://orgmode.org/quickstart.html
- https://karl-voit.at/2021/07/23/emacs-lock-in/
** Contact Me
If you have any interesting information to share please let me know. [[mailto:david.rrrrrr@yandex.com][Email Dave]]
